(function(){if(window.DMP_CONTEXT===undefined){window.DMP_CONTEXT={__version__:'4.5.2',contexts:{},contextsByName:{},set:function(version,contextid,data){if(DMP_CONTEXT.__version__!=version){console.warn('DMP framework version is '+version+', while dmp-common.js is '+DMP_CONTEXT.__version__+'. Unexpected behavior may occur.');}
DMP_CONTEXT.contexts[contextid]=data;},linkContextByName:function(contextid,template){if(DMP_CONTEXT.contextsByName[template]===undefined){DMP_CONTEXT.contextsByName[template]=[];}
DMP_CONTEXT.contextsByName[template].push(contextid);},addScript:function(uid,contextid,template,src,async){var n=document.createElement("script");n.id=uid;n.async=async;n.setAttribute('data-template',template);n.setAttribute("data-context",contextid);n.src=src;if(document.currentScript){document.currentScript.parentNode.insertBefore(n,document.currentScript.nextSibling);}else{document.head.appendChild(n);}},get:function(option){var ret=DMP_CONTEXT.getAll(option);if(ret.length==0){return undefined;}
return ret[ret.length-1];},getAll:function(option){var ret=[];if(option===undefined||option===null){if(document.currentScript===undefined){throw Error('document.currentScript is undefined. DMP_CONTEXT.get() can only be done during initial script processing (not in callbacks or event handling).');}
option=document.currentScript;}
if(option===undefined||option===null){return ret;}
if(typeof option==='string'||option instanceof String){var namemap=DMP_CONTEXT.contextsByName[option];if(namemap!==undefined){for(var i=0;i<namemap.length;i++){var c=DMP_CONTEXT.contexts[namemap[i]];if(c!==undefined){ret.push(c);}}}}
else if(option.nodeType===1&&option.nodeName.toLowerCase()=='script'){var c=DMP_CONTEXT.contexts[option.getAttribute('data-context')];if(c!==undefined){ret.push(c);}}
return ret;},};}})()
